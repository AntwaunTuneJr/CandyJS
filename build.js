/* 
Candy JS
 */
var Candy;

Candy = this.Candy = {};

Candy.httpGet = function(url) {
  var output, xmlhttp;
  xmlhttp = void 0;
  this.url = url;
  if (window.XMLHttpRequest) {
    xmlhttp = new XMLHttpRequest;
  } else {
    xmlhttp = new ActiveXObject('Microsoft.XMLHTTP');
  }
  xmlhttp.onreadystatechange = function() {
    if (xmlhttp.readyState === XMLHttpRequest.DONE) {
      if (xmlhttp.status === 200) {
        document.getElementById('myDiv').innerHTML = xmlhttp.responseText;
      } else if (xmlhttp.status === 400) {
        alert('There was an error 400');
      } else {
        console.log('Error something else other than 200 was returned');
      }
    }
  };
  output = xmlhttp.open('GET', this.url, true);
  xmlhttp.send();
  return output;
};

Candy.shuffle = function(contents) {
  var output;
  this.contents = contents;
  output = this.contents[Math.floor(Math.random() * this.contents.length)];
  return output;
};

Candy.rand = function(arg, arg_2) {
  var output;
  output = Math.floor(Math.random() * (arg - arg_2 + 1)) + arg_2;
  return output;
};

Candy.toVar = function(arg, contains) {
  arg = this.arg;
  contains = this.contains;
  window[arg] = contains;
};

Candy.write = function(arg, arg2) {
  var w;
  var w;
  if (this.arg2 === true) {
    console.log(this.arg);
  } else if (this.arg2 === void 0) {
    w = document.createElement('div');
    w.textContent = this.arg;
    document.body.appendChild(w);
  } else {
    w = document.createElement('div');
    w.textContent = this.arg;
    document.body.appendChild(w);
  }
};

Candy.time = function() {
  var ampm, candy_time, d, hour, min;
  d = new Date;
  hour = d.getHours() === 0 ? 12 : d.getHours() > 12 ? d.getHours() - 12 : d.getHours();
  min = d.getMinutes() < 10 ? '0' + d.getMinutes() : d.getMinutes();
  ampm = d.getHours() < 12 ? 'AM' : 'PM';
  candy_time = hour + ':' + min + ' ' + ampm;
  return candy_time;
};

Candy.contains = function(array, value) {
  this.array = array;
  this.value = value;
  if (this.array.indexOf(this.value) !== -1) {
    return true;
  } else {
    return false;
  }
};

Candy.newList = function(items, tags) {
  var i, listContainer, listData, listElement, listItem, numberOfListItems;
  this.tags = tags;
  this.items = items;
  listData = this.items;
  listContainer = document.createElement('div');
  document.getElementsByTagName('body')[0].appendChild(listContainer);
  listElement = document.createElement(this.tags[0]);
  listContainer.appendChild(listElement);
  numberOfListItems = listData.length;
  i = 0;
  while (i < numberOfListItems) {
    listItem = document.createElement(this.tags[1]);
    listItem.innerHTML = listData[i];
    listElement.appendChild(listItem);
    ++i;
  }
};

Candy.getIP = function() {
  return '<!--#echo var="REMOTE_ADDR"-->';
};

console.log(Candy.time());

// ---
// generated by coffee-script 1.9.2
